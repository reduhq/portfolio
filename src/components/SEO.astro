---
interface Props{
    title:string
    description:string
    canonical?:string
    image?:string,
    language?:string
}
const {
    title,
    description,
    canonical,
    image,
    language = 'es'
} = Astro.props
const lang = language === 'en' ? 'en_US' : 'es_ES'


const determineCanonicalURL = ()=>{
    if(Astro.url.host.includes("localhost")) return "http://localhost:4321"
    const pathname = Astro.url.pathname.split('/').filter(path => path!=='en')
    return canonical || pathname.join('/')
}
const canonicalURL = new URL(determineCanonicalURL(), Astro.site)

const determineAlternativeURL = ()=>{
    if(Astro.url.host.includes("localhost")) return "http://localhost:4321/en"
    return canonical || (language==='en'?"":"en") + Astro.url.pathname
}
const alternativeURL = new URL(determineAlternativeURL(), Astro.site)
---

<title>{title}</title>

<meta charset="UTF-8" />
<meta name="description" content={description} />

<link rel="canonical" href={canonicalURL} />
<link rel="alternate" href={alternativeURL} hreflang="en" />
<meta name="viewport" content="width=device-width" />

<meta name="keywords" content="Rey, Halsall, reduhq, portafolio, portfolio, freelance, Nicaragua, Managua, software, developer, backend, frontend, fullstack, react, astro, nextjs, expressjs, fastapi, javascript, typescript, python, html, css, diseÃ±o, web, pagina">

{image&&<meta property="og:image" content={new URL(image, Astro.site)} />}
{!image&&<meta property="og:image" content={new URL(language==='en'?'reduhq-portfolio-img-en.png':'reduhq-portfolio-img.png', Astro.site)} />}
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:url" content={Astro.url} />
<meta property="og:site_name" content="Rey Halsall Portfolio" />
<meta property="og:type" content="website" />
<meta property="og:locale" content={lang} />

<meta name="robots" content="index, follow" />
<meta name="googlebot" content="index, follow" />


<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<meta name="generator" content={Astro.generator} />



