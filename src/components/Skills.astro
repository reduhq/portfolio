---
import { Icon } from 'astro-icon/components'
import data from './../tags.json'
import { object } from 'astro/zod'
const TAGS:{[section:string]:{[tag:string]:{name:string, icon:string, class:string}}} = data

import { getI18N } from '../i18n';
const {currentLocale} = Astro
const i18n = getI18N({currentLocale})

const getSubtitle = (subtitle:string)=>{
    if(subtitle === 'LANGUAGES') return i18n.SKILLS_LANGUAGES
    if(subtitle === 'FRONTEND') return 'Frontend'
    if(subtitle === 'BACKEND') return 'Backend'
    if(subtitle === 'TOOLS') return 'Tools'
}
---


<section class="mt-[6rem] text-[1.5rem]">
    <div class="container">
        <h2 class="text-center">{i18n.SKILLS_TITLE}</h2>
        <div class="mt-[1rem]">
            {
                Object.keys(TAGS).map(section =>(
                    <div class="mb-[.5rem] flex flex-col md:flex-row items-center gap-[.5rem]">
                        <h2 class="w-[7rem] text-[1rem] text-center text-[#fff9]">{() => getSubtitle(section)}</h2>
                        <ul class="flex flex-wrap gap-[.5rem] justify-center md:justify-normal">
                            {
                                Object.keys(TAGS[section]).map(item =>(
                                    <li class="bg-[#0d1117] h-[7rem] w-[7rem] rounded-[.5rem] flex">
                                        <div class="select-none z-10 h-full w-full flex flex-col justify-center items-center gap-[.5rem] text-[.5rem]">
                                            <Icon name={`${TAGS[section][item].icon}`} size={50}/> {TAGS[section][item].name}
                                        </div>
                                    </li>
                                ))
                            }
                        </ul>
                    </div>
                ))
            }
        </div>
    </div>
</section>

<script>
    let cards = document.querySelectorAll('li')
    cards.forEach(card => {
        card.onmousemove = function(e){
            let x = e.pageX - card.offsetLeft
            let y = e.pageY - card.offsetTop

            card.style.setProperty('--x', x + 'px')
            card.style.setProperty('--y', y + 'px')
        }
    })
</script>

<style>
    ul li{
        position: relative;
        overflow: hidden;
    }

    ul li::before{
        content: '';
        position: absolute;
        top: var(--y);
        left: var(--x);
        transform: translate(-50%, -50%);
        background: radial-gradient(#14d4c9, transparent, transparent);
        width: 14rem;
        height: 14rem;
        opacity: 0;
        transition: 0.5s, top 0s, left 0s;
    }

    ul li:hover:before{
        opacity: 1;
    }

    ul li::after{
        content: '';
        position: absolute;
        inset: 2px;
        background: #0d1117dd;
        border-radius: .5rem;
    }
</style>