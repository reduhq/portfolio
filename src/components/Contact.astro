---
import { Icon } from "astro-icon/components";

import { getI18N } from '../i18n';
const {currentLocale} = Astro
const i18n = getI18N({currentLocale})

---
<section id="contact" class="mt-[6rem]">
    <div class="container">
        <h2 class="text-[1.5rem] text-center mb-[.5rem]">{i18n.CONTACT_TITLE}</h2>
        <div class="flex gap-[1rem] flex-col md:flex-row">
            <div class="w-full">
                <p class="mb-[1rem] font-light" set:html={i18n.CONTACT_DESCRIPTION}></p>
                <form id="contactForm" action="https://api.web3forms.com/submit" method="POST">
                    <input type="hidden" name="access_key" value={import.meta.env.EMAIL_ACCESS_KEY}>
                    <div>
                        <label for="name">{i18n.CONTACT_NAME}</label>
                        <input name="name" type="text" placeholder={i18n.CONTACT_NAME_PLACEHOLDER}>
                    </div>
                    <div>
                        <label for="email">Email</label>
                        <input name="email" type="text" placeholder={i18n.CONTACT_EMAIL_PLACEHOLDER}>
                    </div>
                    <div>
                        <label for="message">{i18n.CONTACT_MESSAGE}</label>
                        <textarea name="message" id="message" style="height:10rem" placeholder={i18n.CONTACT_MESSAGE_PLACEHOLDER}></textarea>
                    </div>
                    <button class="bg-primary rounded-[.5rem] py-[.5rem] text-[#000]" type="submit">{i18n.CONTACT_BTN_SEND}</button>
                </form>
            </div>
            <div class="flex justify-center items-center w-full">
                <Icon name="contact" size={300}/>
            </div>
        </div>
    </div>
</section>

<script>
    import {toast} from 'sonner'
    
    document.querySelectorAll('form div input, form div textarea').forEach(item=>{
        item.addEventListener('input', (e)=>{
            const inputValue = (e.target as HTMLInputElement).value 
            if(!inputValue) item.classList.add("required")
            else item.classList.remove("required")
        });
        item.addEventListener('blur', (e)=>{ // when the input loses the focus
            const inputValue = (e.target as HTMLInputElement).value 
            if(!inputValue) item.classList.add("required")
            else item.classList.remove("required")
        });
    });

    (document.getElementById('contactForm') as HTMLFormElement).addEventListener('submit', function(event) {
        event.preventDefault(); // Evita el envío del formulario
        // Validating the form
        document.querySelectorAll('form div input, form div textarea').forEach(item =>{
            if(!(item as HTMLInputElement || HTMLTextAreaElement).value) item.classList.add('required')
        })
        
        const validated = document.getElementsByClassName('required')
        if(Array.from(validated).length > 0){
            toast.error("llena todos los campos");
            return
        }

        // Validating the email
        const emailInput = document.querySelector('form div input[name="email"]') as HTMLInputElement
        const regex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if(!regex.test(emailInput.value)){
            toast.error('Email invalido')
            emailInput.classList.add('required')
            return
        }

        // Recoge los datos del formulario
        const formData = new FormData(this);
        const object = Object.fromEntries(formData);
        const json = JSON.stringify(object);

        const sendEmail = ()=>{
            return fetch(this.action, {
                method:this.method,
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': 'application/json'
                },
                body: json
            })
        }

        toast.promise(sendEmail, {
            loading: 'Enviando...',
            success:'Formulario enviado con éxito',
            error:'Error al enviar, intente mas tarde...'
        })
    });
</script>

<style>
    span{
        font-weight: bold;
        color: #14d4c9;
    }
    form{
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }
    form div{
        display: flex;
        flex-direction: column;
    }
    form div label{
        color: #14d4c9;
        font-weight: bold
    }
    form div input, form div textarea{
        background-color: transparent;
        border: 1px solid #30363d;
        border-radius: .5rem;
        padding: .5rem 1rem;
    }
    form div input:focus, form div textarea:focus{
        outline: none;
    }
    form div .required{
        border: 1px solid #f00;
    }
</style>